services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: prod
  #   restart: unless-stopped
  #   ports:
  #     - ${PORT}:${PORT}
  #   environment:
  #     APP_ENV: ${APP_ENV}
  #     PORT: ${PORT}
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     DB_USERNAME: ${DB_USERNAME}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - application-net
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - application-net

volumes:
  postgres_volume:
networks:
  application-net:
